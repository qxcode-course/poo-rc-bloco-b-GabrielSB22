{
    "patches": [
        {
            "label": "2025-10-23_19-12-22",
            "content": "@@ -327,25 +327,24 @@\n      %7D%0A%0A    \n- \n return gasto\n",
            "lines": "107"
        },
        {
            "label": "2025-10-23_19-13-19",
            "content": "@@ -326,20 +326,17 @@\n       %7D%0A\n-    \n+%0A\n      ret\n",
            "lines": "107"
        },
        {
            "label": "2025-10-23_19-13-33",
            "content": "@@ -330,24 +330,25 @@\n   %7D%0A        \n+ \n return gasto\n",
            "lines": "106"
        },
        {
            "label": "2025-10-23_19-13-44",
            "content": "@@ -68,17 +68,16 @@\n tamanho:\n- \n int):%0A  \n@@ -154,20 +154,23 @@\n    self.\n-size\n+tamanho\n  = int(t\n@@ -314,16 +314,17 @@\n  %226B%22: 6\n+,\n %0A       \n@@ -447,18 +447,22 @@\n elf.\n-size%7Dmm%22%0A%0A\n+tamanho%7D%22%0A    \n %0Acla\n@@ -762,17 +762,17 @@\n     def \n-i\n+I\n nsert(se\n@@ -987,38 +987,38 @@\n    print(%22fail: \n-calibr\n+grafit\n e incompativel%22)\n@@ -1206,17 +1206,17 @@\n     def \n-r\n+R\n emover(s\n@@ -1377,17 +1377,17 @@\n     def \n-w\n+W\n ritePage\n@@ -1449,33 +1449,32 @@\n t(%22fail: nao exi\n-s\n te grafite%22)%0A   \n@@ -1517,20 +1517,23 @@\n f.ponta.\n-size\n+tamanho\n  %3C= 10:%0A\n@@ -1762,20 +1762,23 @@\n f.ponta.\n-size\n+tamanho\n  - usage\n@@ -1808,20 +1808,23 @@\n f.ponta.\n-size\n+tamanho\n  = 10%0A  \n@@ -1927,20 +1927,23 @@\n f.ponta.\n-size\n+tamanho\n  -= usag\n@@ -1960,32 +1960,40 @@\n     return True%0A\n+        \n %0A    def __str__\n@@ -2263,12 +2263,15 @@\n nta.\n-size\n+tamanho\n %7D%5D%22%0A\n@@ -2340,16 +2340,17 @@\n : null%22%0A\n+%0A\n def main\n@@ -2353,24 +2353,28 @@\n main():%0A\n+    \n     lapi\n seira = \n@@ -2357,33 +2357,33 @@\n ():%0A        lapi\n-s\n+z\n eira = Lapiseira\n@@ -2387,16 +2387,20 @@\n ira%0A    \n+    \n while Tr\n@@ -2403,16 +2403,20 @@\n e True:%0A\n+    \n         \n@@ -2434,24 +2434,28 @@\n t()%0A        \n+    \n print(%22$%22 + \n@@ -2460,16 +2460,20 @@\n + line)%0A\n+    \n         \n@@ -2497,24 +2497,28 @@\n ()%0A%0A        \n+    \n if args%5B0%5D =\n@@ -2538,16 +2538,20 @@\n         \n+    \n break%0A  \n@@ -2548,32 +2548,36 @@\n   break%0A        \n+    \n elif args%5B0%5D == \n@@ -2577,20 +2577,20 @@\n %5B0%5D == %22\n-init\n+show\n %22:%0A     \n@@ -2600,76 +2600,33 @@\n     \n-calibre = float(args%5B1%5D)%0A            lapiseira = Lapis\n+    print(lapiz\n eira\n-(calibre)%0A\n+)%0A    \n     \n@@ -2652,15 +2652,17 @@\n  %22in\n-ser\n+i\n t%22:%0A\n+    \n     \n@@ -2710,154 +2710,47 @@\n     \n-dureza = args%5B2%5D%0A            tamanho = int(args%5B3%5D)%0A            grafite = Grafite(calibre, dureza, tamanho)%0A            lapiseira.insert(grafite)%0A\n+    lapizeira = Lapiseira(calibre)%0A    \n     \n@@ -2819,16 +2819,20 @@\n     \n+    \n if lapi\n-s\n+z\n eira\n@@ -2833,32 +2833,36 @@\n izeira is None:%0A\n+    \n                 \n@@ -2915,16 +2915,20 @@\n         \n+    \n continue\n@@ -2944,19 +2944,23 @@\n     \n+    \n lapi\n-s\n+z\n eira.\n-r\n+R\n emov\n@@ -2964,32 +2964,36 @@\n mover()%0A        \n+    \n elif args%5B0%5D == \n@@ -2993,21 +2993,22 @@\n %5B0%5D == %22\n-write\n+insert\n %22:%0A     \n@@ -3018,30 +3018,176 @@\n     \n-lapiseira.writePage()%0A\n+    calibre = float(args%5B1%5D)%0A                dureza = args%5B2%5D%0A                grafite = Grafite(calibre, dureza, tamanho)%0A                lapizeira.Insert(grafite)%0A    \n     \n@@ -3199,36 +3199,37 @@\n lif args%5B0%5D == %22\n-show\n+write\n %22:%0A            p\n@@ -3231,28 +3231,54 @@\n     \n-print(\n+    \n lapi\n-s\n+z\n eira\n-)%0A%0Amain()\n+.WritePage()%0Amain()%0A                %0A\n",
            "lines": "106"
        },
        {
            "label": "2025-10-23_19-14-25",
            "content": "class Grafite:\n    def __init__(self, calibre: float, dureza: str, tamanho: int):\n        self.calibre = float(calibre)\n        self.dureza = dureza\n        self.size = int(tamanho)\n\n    def usagePerSheet(self) -> int:\n        gasto = {\n            \"HB\": 1,\n            \"2B\": 2,\n            \"4B\": 4,\n            \"6B\": 6\n        }\n        return gasto.get(self.dureza, 0)\n\n    def __str__(self):\n        return f\"{self.calibre}:{self.dureza}:{self.size}mm\"\n\n\nclass Lapiseira:\n    def __init__(self, calibre: float = None):\n        if calibre is None:\n            self.calibre = None\n        else:\n            self.calibre = float(calibre)\n        self.ponta: Grafite | None = None\n\n    def hasGrafite(self) -> bool:\n        return self.ponta is not None\n\n    def insert(self, grafite: Grafite) -> bool:\n        if self.calibre is None:\n            print(\"fail: calibre incompativel\")\n            return False\n        if abs(self.calibre - float(grafite.calibre)) > 1e-9:\n            print(\"fail: calibre incompativel\")\n            return False\n        if self.ponta is not None:\n            print(\"fail: ja existe grafite\")\n            return False\n        self.ponta = grafite\n        return True\n\n    def remover(self):\n        if self.ponta is None:\n            print(\"fail: nao existe grafite\")\n            return None\n        self.ponta = None\n        return True\n\n    def writePage(self):\n        if self.ponta is None:\n            print(\"fail: nao existe grafite\")\n            return False\n        if self.ponta.size <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return False\n        usage = self.ponta.usagePerSheet()\n        if usage <= 0:\n            print(\"fail: dureza invalida\")\n            return False\n        if (self.ponta.size - usage) < 10:\n            self.ponta.size = 10\n            print(\"fail: folha incompleta\")\n            return False\n        else:\n            self.ponta.size -= usage\n            return True\n\n    def __str__(self):\n        if self.calibre is not None:\n            calibre = str(self.calibre)\n        else:\n            calibre = \"None\"\n        if self.ponta is not None:\n            return f\"calibre: {calibre}, grafite: [{self.ponta.calibre}:{self.ponta.dureza}:{self.ponta.size}]\"\n        else:\n            return f\"calibre: {calibre}, grafite: null\"\ndef main():\n    lapiseira = Lapiseira\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            lapiseira = Lapiseira(calibre)\n        elif args[0] == \"insert\":\n            calibre = float(args[1])\n            dureza = args[2]\n            tamanho = int(args[3])\n            grafite = Grafite(calibre, dureza, tamanho)\n            lapiseira.insert(grafite)\n        elif args[0] == \"remover\" or args[0] == \"remove\":\n            if lapiseira is None:\n                print(\"fail: lapiseira nao iniciada\")\n                continue\n            lapiseira.remover()\n        elif args[0] == \"write\":\n            lapiseira.writePage()\n        elif args[0] == \"show\":\n            print(lapiseira)\n\nmain()",
            "lines": "107"
        }
    ]
}